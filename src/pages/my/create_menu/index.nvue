<template>
	<view class="create_wrapper">
		<view class="">
			<text class="content_title">标题</text>
			<u--input
			    placeholder="请输入食谱标题"
			    border="bottom"
			    clearable
				v-model="formData.title"
			></u--input>
		</view>
		<view class="content">
			<text class="content_title">制作步骤</text>
			<u--textarea v-model="formData.step" placeholder="分享我的食谱" maxlength="500" placeholderStyle="" height="288rpx" count></u--textarea>
		</view>
		<view class="content">
			<text class="content_title">是否公开</text>
			<option :options="options" :data.sync="option"></option>
		</view>
		<view class="content" style="padding-top: 20rpx;">
			<text class="content_title">选择发布类型</text>
			<view class="item">
				<text class="left">{{ timeColums[0][time] }}</text>
				<image src="@/static/imgs/right.png" mode="aspectFit" class="right" @click="handleOption(true)"></image>
			</view>
			<view class="item">
				<text class="left">{{ classificationColums[0][classification] }}</text>
				<image src="@/static/imgs/right.png" mode="aspectFit" class="right" @click="handleOption(false)"></image>
			</view>
		</view>
		<view class="content">
			<text class="content_title">上传图片</text>
			<!-- <u-upload
				:fileList="fileList"
				width="210rpx"
				height="210rpx"
				@afterRead="afterRead"
				@delete="deletePic"
				:maxCount="9"
			></u-upload> -->
			<view style="flex-direction: row;">
				<image v-if="uploadImg" :src="uploadImg" mode="" class="uploadImg"></image>
				<image src="@/static/imgs/uploadImg.png" mode="" class="uploadImg" @click="upload"></image>
			</view>
		</view>
		<view class="control_fixed">
			<u-button type="default" shape="circle" text="确认" class="custom-style" throttleTime=500 :loading="isLoading" loadingText="加载中" @click="confrimCreate"></u-button>
		</view>
		<u-picker :show="showTime" :columns="timeColums" @cancel="showTime = false" @confirm="confirmTime"></u-picker>
		<u-picker :show="showClassification" :columns="classificationColums" @cancel="showClassification = false" @confirm="confirmClassification"></u-picker>
		<u-toast ref="uToast"></u-toast>
	</view>
</template>

<script>
import Option from '@/pages/components/Option/index.vue'
import { mapState } from 'vuex'

export default {
	data() {
		return {
			showTime: false,	// 按用餐时间分类，
			timeColums: [
				['早餐', '午餐', '晚餐', '加餐']
			],
			time: 0,
			showClassification: false,	// 按食物类别分
			classificationColums: [
				['主食', '菜品', '甜点', '汤', '炸物', '小食', '饮品']
			],
			classification: 0,
			formData: {
				title: '',
				step: ''
			},
			// fileList: [],
			option: '',
			options: [
				{ id: 1, label: '公开' },
				{ id: 0, label: '不公开' }
			],
			uploadImg: '',
			isLoading: false
		}
	},
	computed: {
		...mapState('user', ['token']),
		uploadSrc(){
			return this.uploadImg.substr(this.uploadImg.lastIndexOf('/', this.uploadImg.lastIndexOf('/') - 1) + 1)
		}
	},
	components: {
		Option
	},
	methods: {
		handleOption(isTime) {
			isTime ? this.showTime = true : this.showClassification = true
		},
		confirmTime(date) {
			this.time = date.indexs[0]
			console.log(this.time)
			this.showTime = false
		},
		confirmClassification(date) {
			this.classification = date.indexs[0]
			this.showClassification = false
		},
		upload() {
			uni.chooseImage({
				count: 1,
			    success: (res) => {
					uni.uploadFile({
						url:'http://192.168.1.5:8080/upload/uploadImg',
						filePath: res.tempFilePaths[0],
						name: 'file',
						success: (uploadFileRes) => {
							this.uploadImg = uploadFileRes.data
							// console.log(this.uploadImg.substr(this.uploadImg.lastIndexOf('/', this.uploadImg.lastIndexOf('/') - 1) + 1))
							// console.log(this.uploadImg.split('/'))
							// console.log(uploadFileRes)
							// uni.hideLoading();
							// if (back.status == "0") {
							// 	console.log(that.host + back.filepath[0])
							// 	that.editorCtx.insertImage({
							// 		src: that.host + back.filepath[0],
							// 		alt: '图像',
							// 		success: function() {}
							// 	})
							// } else {
							// 	console.log(back.msg);
							// }
						},
						fail: () => {
							console.log('图片上传失败，请联系开发')
						}
					})
			    }
			})
		},
		async confrimCreate() {
			if (!this.formData.title) {
				return this.$refs.uToast.show({
					type: 'default',
					message: "请输入食谱标题"
				})
			}
			if (!this.formData.step) {
				return this.$refs.uToast.show({
					type: 'default',
					message: "请输入制作步骤"
				})
			}
			this.isLoading = true
			const response = await uni.request({
				header: {
					'content-type': 'application/x-www-form-urlencoded',
					'token': this.token
				},
				url: 'http://192.168.1.5:8080/menus/uploadMenu',
				method: 'POST',
				data: {
					title: this.formData.title,
					pic: this.uploadSrc,
					categoryTime: this.time,
					category: this.classification,
					status: this.option,
					step: this.formData.step
				},
				success: (res) => {
					// console.log(res)
					if (res.data.code === 200) {
						console.log(res.data.data)
						this.$refs.uToast.show({
							type: 'success',
							message: "上传食谱成功"
						})
						setTimeout(() =>{
							uni.switchTab({
								url: '/pages/my/index'
							})
						}, 3000)
					} else {
						return this.$refs.uToast.show({
							type: 'error',
							message: "上传食谱失败"
						})
					}
				},
				fail(err) {
					return uni.showToast({
						title: '请求接口失败'
					})
				},
				complete: () => {
					this.isLoading = false
				}
			})
		}
	}
}
</script>

<style lang="scss" scoped>
.create_wrapper {
	padding: 0 32rpx;
}
.content {
	padding-top: 48rpx;
	&_title {
		font-size: 36rpx;
		font-weight: 700;
		color: #4A4A4A;
		margin-bottom: 12rpx;
	}
}
.item {
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	height: 80rpx;
	border-bottom: 1rpx solid #C4C4C4;
	.left {
		font-size: 32rpx;
		color: #C4C4C4;
	}
	.right {
		width: 40rpx;
		height: 40rpx;
	}
}
// .control_fixed {
// 	width: 750rpx;
// 	position: fixed;
// 	bottom: 0;
// 	align-items: center;
// 	.confirm {
// 		width: 592rpx;
// 		height: 88rpx;
// 		background-color: #FFCD38;
// 		border-radius: 62rpx;
// 		justify-content: center;
// 		align-items: center;
// 		margin-bottom: 92rpx;
// 		&_text {
// 			font-size: 36rpx; 
// 			color: #FFFFFF;
// 		}
// 	}
// }
.control_fixed {
	width: 750rpx;
	position: fixed;
	bottom: 0;
	align-items: center;
	.custom-style {
		width: 592rpx;
		height: 88rpx;
		background-color: #FFCD38;
		margin-bottom: 50rpx;
	}
}
.uploadImg {
	width: 200rpx;
	height: 200rpx;
	margin-right: 18rpx;
	border-radius: 10rpx;
}
</style>
